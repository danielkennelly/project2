demo()
install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
library(MASS)
help(MASS)
??MASS
find_rtools()
install.packages("KernSmooth")
library(dataset)
library(datasets)
data(iris)
?iris
head(iris)
iris.sub <- iris["virginica"]
iris
iris
iris[virginica]
iris["virginica""]
[1]
`.
fdas
""
iris["virginica"]
iris[["virginica"]]
iris
iris[150][5]
iris$virginica
iris$"virginica"
iris
head(iris)
iris[["Species" = "virginica"]]
iris[["Species" == "virginica"]]
iris[["Species"]]
iris.sub <- subset(iris, iris$Species == "virginica")
iris.sub
head(iris.sub)
iris.sub[["Sepal.Length"]]
mean(iris.sub[["Sepal.Length"]])
apply(iris[, 1:4, 2, mean])
apply(iris[, 1:4, 1, mean])
apply(iris, 2, mean)
apply(iris, 1, mean)
iris[, 1:4]
apply(iris[, 1:4], 1, mean)
iris[, 1:4]
?mean
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], mean)
apply(iris[, 1:4], 2, mean)
mean1 <- apply(iris[, 1:4], 1, mean)
mean2 <- apply(iris[, 1:4], 2, mean)
mean1
mean2
class(mean1)
class(mean2)
mean2
mean2 <- apply(iris[, 1:4], 2, mean)
mean2
data(mtcars)
?mtcars
head(mtcars)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mpg, cyl, mean)
tapply(mpg, "cyl", mean)
tapply("mpg", "cyl", mean)
tapply("mpg", cyl, mean)
tapply(mpg, cyl, mean)
?with
mtcars.sub <- tapply(mpg, cyl, mean)
mtcars.sub <- tapply(mpg, mean)
mtcars.sub <- tapply(mtcars["mpg"], mtcars["cyl"], mean)
mtcars["mpg"]
mtcars.sub <- tapply(mtcars[["mpg"]], mtcars[["cyl"]], mean)
mtcars.sub
mtcars
head(mtcars)
fourcyl <- with(mtcars, tapply(hp, cyl, mean))
fourcyl
fourcyl[1]
ans <- fourcyl[3] - fourcyl[1]
ans
numgear <- with(mtcars, tapply(gear, mpg, mean))
numgear
numgear <- with(mtcars, tapply(mpg, gear, mean))
numgear
debug(ls)
ls()
quit()
exit()
exit
ls
ls()
all.names
debug(ls)
debug(ls)
ls()
quit()
?numeric
?matrix
set.seed(1)
rpois(5,2)
set.seed(1)
class(rpois(5,2))
set.seed(1)
class(rpois(5,2))
set.seed(1)
rpois(5,2)
?ppois
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
?rbinom
?rnorm
y <- 0.5 + 2 * x + e
plot(x,y)
summary(y)
?system.time
version()
rm(list = ls())
install.packages("lattice")
install.packages("grid")
?grid
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
class(p)
print(p)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f - f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
f
summary(f)
table(f)
y
rnorm(100)
xyplot( y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.abline(h = median(y), lty = 2)
})
xyplot( y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y, ...)
panel.lmline(x, y, col = 2)
})
install.packages("ggplot2")
?qplot
library(ggplot2)
?qplot
?ggplot
str(mpg)
names(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = manufacturer)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facet = .~manufacturer)
qplot(displ, hwy, data = mpg, facets = .~manufacturer)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(displ, hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
ggplot(data = mpg)
ggplot(year, hwy, data = mpg)
names(mpg)
ggplot(hwy, data = mpg)
ggplot(data = mpg)
ggplot()
g <- ggplot(mpg, aes(year, hwy))
print(g)
p <- g + geom_point()
print(p)
g <- ggplot(mpg, aes(displ, hwy))
p <- g + geom_point()
print(p)
p <- g + geom_point() + geom_smooth(method = "lm")
print(p)
g + geom_point() + facet_grid(. ~ drv) + geom_smooth(method = "lm")
g
p
g + geom_point() + facet_grid(. ~ drv) + geom_smooth(method = "lm")
testdat <- data.frame(x = 1:100, y = rnorm(100))
testdat[50,2] <- 100
plot(testdat$x, testdat$y, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = x, y = y))
g + geom_line()
g <- ggplot(testdat, x = x, y = y)
g + geom_line()
g <- ggplot(testdat, aes(x = x, y = y))
g + geom_line()
testdat
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
install.packages("grDevices")
library(grDevices)
?colorRamp
?colorRampPalette
?heat.colors()
?topo.colors()
colors()
gray()
?gray
gray(0)
gray(1)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(.5)
pal(.33)
pal(.333)
pal(sqrt(2))
pal(sqrt(.5))
pal(0.80)
pal(.9)
pal(.99)
pal(.9999999999999)
pal(seq(0,1, len = 10))
pal <- colorRampPalette(c("red","yellow"))
pal(2)
pal(10)
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(3, "RdBu")
cols
cols <- brewer.pal(10, "RdBu")
cols
pal <- colorRampPallete(cols)
pal <- colorRampPalette(cols)
image(volcano, col = pal(20))
image(volcano, col = pal(50))
image(volcano, col = pal(100))
image(volcano, col = pal(10))
image(volcano, col = pal(5))
image(volcano, col = pal(50))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
install.packages("KernSmooth")
install.packages("colorspace")
library(colorspace)
plot(x,y,col= rgb(0,0,0,0.2), pch = 19)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y,col= rgb(0,0,0,0.2), pch = 19)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y,col= rgb(0,0,0,0.2), pch = 19)
source("plot4.R")
setwd("/Users/danielkennelly/Desktop/datascience/exdata-005/project2")
source("plot4.R")
names(SCC)
head(SCC$SCC)
head(SCC$Short.Name)
SCC$Short.Name
"coal" %in% SCC$Short.Name
grep1("coal", SCC$Short.Name)
grep("coal", SCC$Short.Name)
grep("[Cc]oal", SCC$Short.Name)
SCC$Short.Name
grep("[Cc]oal", SCC$Short.Name, Value = T)
?grep
grep("[Cc]oal", SCC$Short.Name, value = T)
grepl("[Cc]oal", SCC$Short.Name)
names(SCC)
head(SCC$SCC)
nums <- subset(SCC$SCC, grep1("[Cc]oal", SCC$Short.Name))
nums <- subset(SCC$SCC, grepl("[Cc]oal", SCC$Short.Name))
nrow(nums)
nums
table(nums)
nrow(nums)
head(nums)
length(nums)
nums
head(NEI)
coal <- subset(NEI, NEI$SCC %in% nums)
nrow(coal)
head(coal)
data <- tapply(coal$Emissions, coal$year, sum)
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Total US"~ PM[2.5] ~ "Coal Emissions by Year"), col="red")
png("plot4.png")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Total US"~ PM[2.5] ~ "Coal Emissions by Year"), col="red")
dev.off()
table(SCC$Short.Name)
head(SCC$Short.Name, num = 20)
head(SCC$Short.Name, n = 20)
write.csv(SCC$Short.Name, "SCC.csv")
c(542:2288, 4313:4332)
nums <- subset(SCC$SCC, 1)
nums <- SCC$SCC[1]
nums
nums <- SCC$SCC[1:10]
nums
nums <- SCC$SCC[c(542:2288, 4313:4332)]
nrow(nums)
length(nums)
tail(nums)
nums <- SCC$SCC[c(542:2288, 4313:4332)]
baltimore <- subset(NEI, NEI$fips == "24510")
motor <- subset(baltimore, baltimore$SCC %in% nums)
data <- tapply(motor$Emissions, motor$year, sum)
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Total Baltimore"~ PM[2.5] ~ "Motor Vehicle Emissions
by Year"), col="red")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Baltimore"~ PM[2.5] ~ "Motor Vehicle Emissions
by Year"), col="red")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Baltimore"~ PM[2.5] ~ "Vehicle Emissions
by Year"), col="red")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("B-more"~ PM[2.5] ~ "Vehicle Emissions
by Year"), col="red")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("B-more" ~ PM[2.5] ~ "Vehicle Emissions
by Year"), col="red")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("B-more" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Baltimore" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
png("plot5.png")
barplot(data, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Baltimore" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
dev.off()
?mfrow
??mfrow
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
# all motor vehicle IDs, includes aircraft & marine vessels
nums <- SCC$SCC[c(542:2288, 4313:4332)]
# subset to baltimore city and LA
baltimore <- subset(NEI, NEI$fips == "24510")
angels <- subset(NEI, NEI$fips == "06037")
# subset all baltimore & LA emissions, where SCC is in nums
baltmotor <- subset(baltimore, baltimore$SCC %in% nums)
angelsmotor <-subset(angels, angels$SCC %in% nums)
#sum up emissions data
baltdata <- tapply(baltmotor$Emissions, baltmotor$year, sum)
angelsdata <- tapply(angelsmotor$Emissions, angelsmotor$year, sum)
par(mfrow = c(1,2))
barplot(baltdata, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Baltimore" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
barplot(angelsdata, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("LA" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
png("plot6.png")
par(mfrow = c(1,2))
barplot(baltdata, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("Baltimore" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
barplot(angelsdata, xlab = "Year", ylab=expression(~ PM[2.5] ~ "Emissions (tons)"),
main=expression("LA" ~ PM[2.5] ~ "Vehicle Emissions"), col="red")
dev.off()
setwd("Users/danielkennelly/Desktop/datascience/exdata-005/project1/ExData_Plotting1")
setwd("Users/danielkennelly/Desktop/datascience/exdata-005/project1")
setwd("Users/danielkennelly/")
setwd("/Users/danielkennelly/Desktop/datascience/exdata-005/project1/ExData_Plotting1")
source("datprep.R")
#initiate png
png(filename = "plot4.png", width = 480, height = 480,
units = "px", bg = "transparent")
#2 by 2 plot
par(mfrow = c(2,2))
#plot 1: datetime by global active power
x <- psub$datetime
y <- psub$global_active_power
plot(x,y, type="l", xlab="", ylab="Global Active Power")
#plot 2: datetime by voltage
x <- psub$datetime
y <- psub$voltage
plot(x,y, type="l", xlab="datetime", ylab="Voltage")
#plot 3: datetime by sub meterings 1-3
x <- psub$datetime
y <- psub$sub_metering_1
plot(x,y, type="l", col="black", xlab="", ylab="Energy sub metering")
lines(x, psub$sub_metering_2, col = "red")
lines(x, psub$sub_metering_3, col = "blue")
legend("topright", bty = "n", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col=c("black", "red", "blue"), lwd = 1)
#plot 4: datetime by global reactive power
x <- psub$datetime
y <- psub$global_reactive_power
plot(x,y, type="l", xlab="datetime", ylab="Global_reactive_power", col = "black")
dev.off()
setwd("/Users/danielkennelly/Desktop/datascience/exdata-005/project2")
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
print.trellis()
trellis.parset()
par()
trellis.par.set()
lines()
text()
?lattice
?panel
??panel
